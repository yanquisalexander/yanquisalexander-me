---
import BlogShareButtons from "@/components/BlogShareButtons.astro";
import FeaturedButton from "@/components/FeaturedButton.astro";
import Seo from "@/components/Seo.astro";
import SiteFooter from "@/components/SiteFooter.astro";
import SiteHeader from "@/components/SiteHeader.astro";
import ClockUpIcon from "@/icons/ClockUpIcon.astro";
import type { Preload } from "@/types/Preload";
import type { MarkdownInstance } from "astro";
import { ViewTransitions } from "astro:transitions";

interface Props {
	title?: string;
	description?: string;
	preload?: Array<Preload>;
	canonical?: string;
	image?: string;
	content: any;
}

const { title, description, preload, canonical, image, content } = Astro.props;

const pageTitle = (title: string | null) =>
	title ? `${title} | Alexander Barrios` : "Alexander Barrios";

const calculateReadingTime = (content: string) => {
	const averageWordsPerMinute = 200;
	const text = content.trim().replace(/<[^>]+>/g, "");
	const wordCount = text.split(/\s+/).length;
	const readingTime = Math.ceil(wordCount / averageWordsPerMinute);
	return readingTime;
};

const readingTime = content?.body ? calculateReadingTime(content.body) : 0;

const schema = {
	"@context": "https://schema.org",
	"@type": "BlogPosting",
	url: `https://www.yanquisalexander.me/blog/${content.slug}`,
	mainEntityOfPage: {
		"@type": "WebPage",
		"@id": `https://www.yanquisalexander.me/blog/${content.slug}`,
	},
	headline: `${content.data.title}`,
	description: `${content.data.description}`,
	author: {
		"@type": "Person",
		name: "Alexander Barrios",
	},
	publisher: {
		"@type": "Organization",
		name: "Alexander Barrios",
	},
	datePublished: `${content.data.pubDate}`,
	dateModified: `${content.data.pubDate}`,
};
---

<!doctype html>
<html lang="en" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<Seo
			canonical={canonical}
			description={description}
			image={image}
			preload={preload}
			title={title ? pageTitle(title) : pageTitle(null)}
		/>
		<ViewTransitions />
		{
			content && (
				<script
					type="application/ld+json"
					set:html={JSON.stringify(schema)}
				/>
			)
		}
		<ViewTransitions />
		<title>
			{title ? pageTitle(title) : pageTitle(null)}
		</title>
		{
			content.data.description ? (
				<meta name="description" content={content.data.description} />
			) : null
		}
	</head>
	<body>
		<SiteHeader />
		<main>
			<div class="container mx-auto px-4 sm:px-6 lg:px-8 mt-16 mb-16">
				<div class="flex my-8 w-full items-center">
					<FeaturedButton href="/blog">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							class="icon icon-tabler icon-tabler-arrow-left mr-2"
							width="24"
							height="24"
							viewBox="0 0 24 24"
							stroke-width="2"
							stroke="currentColor"
							fill="none"
							stroke-linecap="round"
							stroke-linejoin="round"
							><path stroke="none" d="M0 0h24v24H0z" fill="none"
							></path><path d="M5 12l14 0"></path><path
								d="M5 12l6 6"></path><path d="M5 12l6 -6"
							></path></svg
						>
						Back to Blog
					</FeaturedButton>

					<div class="flex-1"></div>

					<BlogShareButtons url={Astro.url} />
				</div>
				<article class="max-w-2xl mx-auto">
					{
						content.data.author && (
							<>
								<p class="text-gray-600 mb-4">
									<img
										src={content.data.author.avatar}
										alt={content.data.author.name}
										title={content.data.author.name}
										class="w-8 h-8 rounded-full inline-block mr-2"
									/>
									Published by {content.data.author.name}
								</p>
								<p class="text-gray-600 mb-4 flex items-center">
									<ClockUpIcon class="w-4 h-4 inline-block mr-2" />
									Reading time: {readingTime} min
								</p>
							</>
						)
					}
					<h1 class="text-xl font-bold mb-4">
						{content?.data.title}
					</h1>
					{
						content?.pubDate && (
							<p class="text-gray-600 mb-8">
								{new Date(content?.pubDate).toLocaleDateString(
									"en-US",
									{
										year: "numeric",
										month: "long",
										day: "numeric",
									},
								)}
							</p>
						)
					}

					{
						content?.description && (
							<p class="leading-relaxed mb-8 text-black/60 italic text-sm">
								{content?.description}
							</p>
						)
					}

					<div
						class="[&>p]:text-lg [&>p]:leading-relaxed [&>p]:mb-4 [&>p>em]:text-black/50 [&>p>em]:text-sm [&>p>em]:font-bold [&>p>strong]:font-bold [&>p>a]:text-blue-500 [&>p>a]:hover:text-blue-700 [&>blockquote]:border-l-4 [&>blockquote]:border-blue-500 [&>blockquote]:pl-4 [&>blockquote]:my-8 [&>ul]:list-disc [&>ul>li]:ml-4 [&>ol]:list-decimal [&>ol>li]:ml-4 [&>blockquote>p]:italic [&>blockquote>p]:text-gray-600 [&>blockquote>p]:mb-4"
					>
						<slot />
					</div>
				</article>
			</div>
		</main>
		<SiteFooter />
		<style is:global>
			html {
				font-family: "Jost", sans-serif !important;
			}
		</style>
	</body>
</html>
