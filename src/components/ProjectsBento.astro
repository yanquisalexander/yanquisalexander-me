---
import Badge from "./Badge.astro";
import FeaturedButton from "./FeaturedButton.astro";
import BrandNuxtIcon from "@/icons/BrandNuxtIcon.astro";
import BrandTwitchIcon from "@/icons/BrandTwitchIcon.astro";
import ExternalLinkIcon from "@/icons/ExternalLinkIcon.astro";
import { Tailwind, TypeScript } from "@react-symbols/icons";

// Force the inclusion of the classes we need
const includedClasses = [
    "grid-cols-1",
    "grid-cols-2",
    "grid-cols-3",
    "grid-cols-4",
];

interface Project {
    title: string;
    image?: string;
    link?: string;
    description?: string;
    colSpan?: number; // Nueva propiedad para el col-span
    tags?: Tag[];
}

interface Tag {
    name: string;
    classes: string;
    icon?: any;
}

const TAGS = {
    Nuxt: {
        name: "Nuxt.js",
        classes: "bg-gradient-to-br from-green-400 to-blue-500 text-white",
    },
    Express: {
        name: "Express.js",
        classes: "bg-[#9146FF] text-white",
    },
    Tailwind: {
        name: "Tailwind CSS",
        classes: "bg-[#06B6D4] text-white",
    },
    TypeScript: {
        name: "TypeScript",
        classes: "bg-[#3178C6] text-white",
    },
    Astro: {
        name: "Astro",
        classes: "bg-[#0D68F2] text-white",
    },
};

const PROJECTS: Project[] = [
    {
        title: "RetosJS",
        image: "/images/retosjs.webp",
        link: "https://retosjavascript.vercel.app/",
        description:
            "JavaScript challenges for beginners and advanced developers.",
        tags: [TAGS.Astro, TAGS.TypeScript, TAGS.Tailwind],
    },
    {
        title: "Application of forms for Farms in Southern Chile",
        image: "/images/farm-app.webp",
        description:
            "Application for the management of forms for farms in southern Chile.",
        tags: [TAGS.Nuxt, TAGS.Tailwind],
    },
];
---

<div
    class="grid md:auto-rows-[20rem] grid-cols-1 md:grid-cols-3 gap-4 mx-auto mb-12"
>
    {
        PROJECTS.map((project, index) => (
            <div
                class={`row-span-1 rounded-xl group/bento hover:shadow-xl transition duration-200 shadow-input p-4  bg-white/10 border border-transparent justify-between flex flex-col space-y-4 
                    ${index % 3 === 0 ? "md:col-span-2" : "col-span-1"}`}
            >
                <div
                    class="flex flex-1 w-full h-full min-h-[6rem] rounded-xl bg-gradient-to-br from-neutral-200 to-neutral-100"
                    style={{
                        backgroundImage: `url(${project.image})`,
                        backgroundSize: "cover",
                        backgroundPosition: "center",
                    }}
                />
                <div class="group-hover/bento:translate-x-2 transition duration-200">
                    <a
                        class="font-sans font-bold text-neutral-200 mb-2 mt-2 hover:underline"
                        href={project.link}
                        target="_blank"
                    >
                        {project.title}
                    </a>
                    <div class="font-sans font-normal text-xs text-neutral-300">
                        {project.description}
                    </div>
                    {project.tags && (
                        <div class="flex flex-row flex-wrap mt-2 space-x-2">
                            {project.tags.map((tag, tagIndex) => (
                                <Badge>
                                    {tag.icon && (
                                        <tag.icon class="w-4 h-4 mr-2 inline-block" />
                                    )}
                                    {tag.name}
                                </Badge>
                            ))}
                        </div>
                    )}
                    <footer class="flex flex-row justify-between items-center mt-4">
                        <div class="font-sans font-normal text-neutral-600 text-xs dark:text-neutral-300">
                            {project.link && (
                                <a
                                    href={project.link}
                                    target="_blank"
                                    class="flex flex-row items-center space-x-1"
                                >
                                    <ExternalLinkIcon class="w-4 h-4 mr-2" />
                                    {project.link}
                                </a>
                            )}
                        </div>
                    </footer>
                </div>
            </div>
        ))
    }
</div>
